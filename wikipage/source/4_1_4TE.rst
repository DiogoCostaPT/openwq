Transport and Erosion/Mobilization
=====================================

The Transport-Erosion file is a JSON file that defines both the transport and mobilization of species within hydrological compartments and at their interface.

**Principal Key 1**: ``MODULE_NAME``

+--------------------+-------------------------------------------------------+
| ``MODULE_NAME``    | Select the module name desired                        |
+--------------------+-------------------------------------------------------+

**Principal Key 2**: ``INTMOB_CONFIGURATION`` (internal mobilization)

+-----------------------------------+-------------------------------------------------------------+
| ``K_val`` -> ``[i#,i#,...]``      | - Mobilization coefficients for each host-model compartment |
|                                   | - Example: ``[0.01, 0.0, 0.2, 0.0, 0.0]``                   |
+-----------------------------------+-------------------------------------------------------------+

**Principal Key 3**: ``BOUNDMIX_CONFIGURATION`` (mobilization at compartment interfaces)

+---------------------------------------------------------------+--------------------------------------------------------------------+
| ``(i#)``                                                      | Numbering the boundary mix interface                               |
+---------------------------------------------------------------+--------------------------------------------------------------------+
| ``(i#)`` -> ``DIRECTION``                                     | Direction of the interface between compartments, e.g. "z"          |
+---------------------------------------------------------------+--------------------------------------------------------------------+
| ``(i#)`` -> ``UPPER_COMPARTMENT``                             | Name of the upper compartment, e.g., ``"RUNOFF"``                  |
+---------------------------------------------------------------+--------------------------------------------------------------------+
| ``(i#)`` -> ``UPPER_COMPARTMENT``                             | Name of the upper compartment, e.g., ``"ILAYERVOLFRACWAT_SOIL"``   |
+---------------------------------------------------------------+--------------------------------------------------------------------+
| ``(i#)`` -> ``K_VAL``                                         | Exchange rate ``"k_val": 0.001``                                   |
+---------------------------------------------------------------+--------------------------------------------------------------------+

The JSON file supports C/C++ syntax for comments: single-line comment (``//``) or comment blocks (``/*`` and ``*/``). 

The symbol ``(i#)`` refers to a integer number sequence.. The symbol ``(s#)`` refers to a string input. The symbol ``<f#>`` refers to a float input value.

The Kinetics Equation is supported by the C++ Mathematical Expression Toolkit Library
`C++ Mathematical Expression Toolkit Library <http://www.partow.net/programming/exprtk/index.html>`_. The equations can be written with (1) multiple chemical species, (2) user-defined parameters (``PARAMETER_NAMES`` and ``PARAMETER_VALUES``), and (3) in-build hytdrological model dependencies (``Tair`` and ``Tsoil``).
These model dependencies are tailored to each hydrological model. They can be soil moisture, air and/or soil temperature, etc.

Example:

.. code-block:: json

    {

        "MODULE_NAME": "OPENWQ_NATIVE_TE_ADVP",

        "INTMOB_CONFIGURATION": {
            "K_val": [0.01, 0.0, 0.2, 0.0, 0.0]
        },

        "BOUNDMIX_CONFIGURATION":{
            "1": {
                "direction": "z",
                "upper_compartment": "RUNOFF",
                "lower_compartment": "ILAYERVOLFRACWAT_SOIL",
                "K_val": 0.01
            },
            "2": {
                "direction": "z",
                "upper_compartment": "ILAYERVOLFRACWAT_SNOW",
                "lower_compartment": "ILAYERVOLFRACWAT_SOIL",
                "K_val": 0.0
            }
        }

    }